package assignment_8b;

public class ques_6 {

	public static void main(String[] args) {
		System.out.println(countNqueens(4));

	}
	public static int countNqueens(int n) {
		boolean[][] board = new boolean[n][n];
		return countNqueens(board, 0);
	}

	public static int countNqueens(boolean[][] board, int row) {
		if (row == board.length) {
			return 1;
		}
		int count = 0;
		for (int col = 0; col < board[row].length; col++) {
			if (isitsafetpq(board, row, col)) {
				board[row][col] = true;
				count += countNqueens(board, row + 1);
				board[row][col] = false;
			}
		}
		return count;
	}

	public static boolean isitsafetpq(boolean[][] board, int row, int col) {// check
																			// col
//		for (int i = row - 1; i >= 0; i--) {
//			if (board[i][col]) {
//				return false;
//			}
//		}
		// check diagnol
//		for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) {
//			if (board[i][j+1]) {
//				return false;
//			}
//		}
//		for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) {
//			if (board[i-1][j]) {
//				return false;
//			}
//		}

		for (int i = row , j = col + 1; i >= 0 && j < board.length; i--, j++) {
			if (board[i][j+1]) {
				return false;
			}
//		}
//		for (int i = row - 1, j = col + 1; i >= 0 && j < board.length; i--, j++) {
//			if (board[i+1][j]) {
//				return false;
//			}
//		}
		return true;
	}


}
